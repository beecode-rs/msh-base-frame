import { arrayUtil } from '@beecode/msh-util/array-util';
import { FileAdapter } from '#src/lib/file-adapter';
import { logger } from '#src/util/logger';
export const fileService = {
    readIgnoreFileFolderList: async (params) => {
        const { folderPath } = params;
        try {
            const body = await new FileAdapter().readFile({ filePath: `${folderPath}/.bfignore` });
            return body
                .split('\n')
                .map((stringLine) => stringLine.trim())
                .filter(arrayUtil.notFalsy);
        }
        catch (error) {
            logger().error('fileService.readIgnoreFileFolderList', { error });
            return [];
        }
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2J1c2luZXNzL3NlcnZpY2UvZmlsZS1zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQTtBQUV4RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUE7QUFDbkQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFBO0FBRXpDLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRztJQUMxQix3QkFBd0IsRUFBRSxLQUFLLEVBQUUsTUFBOEIsRUFBcUIsRUFBRTtRQUNyRixNQUFNLEVBQUUsVUFBVSxFQUFFLEdBQUcsTUFBTSxDQUFBO1FBRTdCLElBQUksQ0FBQztZQUNKLE1BQU0sSUFBSSxHQUFHLE1BQU0sSUFBSSxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxRQUFRLEVBQUUsR0FBRyxVQUFVLFlBQVksRUFBRSxDQUFDLENBQUE7WUFFdEYsT0FBTyxJQUFJO2lCQUNULEtBQUssQ0FBQyxJQUFJLENBQUM7aUJBQ1gsR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7aUJBQ3RDLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDN0IsQ0FBQztRQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7WUFDaEIsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLHNDQUFzQyxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQTtZQUVqRSxPQUFPLEVBQUUsQ0FBQTtRQUNWLENBQUM7SUFDRixDQUFDO0NBQ0QsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFycmF5VXRpbCB9IGZyb20gJ0BiZWVjb2RlL21zaC11dGlsL2FycmF5LXV0aWwnXG5cbmltcG9ydCB7IEZpbGVBZGFwdGVyIH0gZnJvbSAnI3NyYy9saWIvZmlsZS1hZGFwdGVyJ1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnI3NyYy91dGlsL2xvZ2dlcidcblxuZXhwb3J0IGNvbnN0IGZpbGVTZXJ2aWNlID0ge1xuXHRyZWFkSWdub3JlRmlsZUZvbGRlckxpc3Q6IGFzeW5jIChwYXJhbXM6IHsgZm9sZGVyUGF0aDogc3RyaW5nIH0pOiBQcm9taXNlPHN0cmluZ1tdPiA9PiB7XG5cdFx0Y29uc3QgeyBmb2xkZXJQYXRoIH0gPSBwYXJhbXNcblxuXHRcdHRyeSB7XG5cdFx0XHRjb25zdCBib2R5ID0gYXdhaXQgbmV3IEZpbGVBZGFwdGVyKCkucmVhZEZpbGUoeyBmaWxlUGF0aDogYCR7Zm9sZGVyUGF0aH0vLmJmaWdub3JlYCB9KVxuXG5cdFx0XHRyZXR1cm4gYm9keVxuXHRcdFx0XHQuc3BsaXQoJ1xcbicpXG5cdFx0XHRcdC5tYXAoKHN0cmluZ0xpbmUpID0+IHN0cmluZ0xpbmUudHJpbSgpKVxuXHRcdFx0XHQuZmlsdGVyKGFycmF5VXRpbC5ub3RGYWxzeSlcblx0XHR9IGNhdGNoIChlcnJvcikge1xuXHRcdFx0bG9nZ2VyKCkuZXJyb3IoJ2ZpbGVTZXJ2aWNlLnJlYWRJZ25vcmVGaWxlRm9sZGVyTGlzdCcsIHsgZXJyb3IgfSlcblxuXHRcdFx0cmV0dXJuIFtdXG5cdFx0fVxuXHR9LFxufVxuIl19