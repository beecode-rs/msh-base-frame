import { FileAdapter } from '#src/lib/file-adapter';
import { templatingAdapter } from '#src/lib/templating-adapter';
import { config } from '#src/util/config';
export class TemplatingService {
    async renderAndOverrideFile(params) {
        const { filePath } = params;
        const renderedContent = await this.renderFile({ filePath, templateValues: config().variables });
        await new FileAdapter().writeToFile({ fileContent: renderedContent, filePath });
    }
    async renderFile(params) {
        const { filePath, templateValues } = params;
        const fileContent = await new FileAdapter().readFile({ filePath });
        return templatingAdapter.transform({ templateContent: fileContent, variables: templateValues });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGluZy1zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2J1c2luZXNzL3NlcnZpY2UvdGVtcGxhdGluZy1zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQTtBQUNuRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQTtBQUMvRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sa0JBQWtCLENBQUE7QUFFekMsTUFBTSxPQUFPLGlCQUFpQjtJQUM3QixLQUFLLENBQUMscUJBQXFCLENBQUMsTUFBNEI7UUFDdkQsTUFBTSxFQUFFLFFBQVEsRUFBRSxHQUFHLE1BQU0sQ0FBQTtRQUUzQixNQUFNLGVBQWUsR0FBRyxNQUFNLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFLE1BQU0sRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUE7UUFFL0YsTUFBTSxJQUFJLFdBQVcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxFQUFFLFdBQVcsRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQTtJQUNoRixDQUFDO0lBRUQsS0FBSyxDQUFDLFVBQVUsQ0FBQyxNQUFxRTtRQUNyRixNQUFNLEVBQUUsUUFBUSxFQUFFLGNBQWMsRUFBRSxHQUFHLE1BQU0sQ0FBQTtRQUUzQyxNQUFNLFdBQVcsR0FBRyxNQUFNLElBQUksV0FBVyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQTtRQUVsRSxPQUFPLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLGNBQWMsRUFBRSxDQUFDLENBQUE7SUFDaEcsQ0FBQztDQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmlsZUFkYXB0ZXIgfSBmcm9tICcjc3JjL2xpYi9maWxlLWFkYXB0ZXInXG5pbXBvcnQgeyB0ZW1wbGF0aW5nQWRhcHRlciB9IGZyb20gJyNzcmMvbGliL3RlbXBsYXRpbmctYWRhcHRlcidcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJyNzcmMvdXRpbC9jb25maWcnXG5cbmV4cG9ydCBjbGFzcyBUZW1wbGF0aW5nU2VydmljZSB7XG5cdGFzeW5jIHJlbmRlckFuZE92ZXJyaWRlRmlsZShwYXJhbXM6IHsgZmlsZVBhdGg6IHN0cmluZyB9KTogUHJvbWlzZTx2b2lkPiB7XG5cdFx0Y29uc3QgeyBmaWxlUGF0aCB9ID0gcGFyYW1zXG5cblx0XHRjb25zdCByZW5kZXJlZENvbnRlbnQgPSBhd2FpdCB0aGlzLnJlbmRlckZpbGUoeyBmaWxlUGF0aCwgdGVtcGxhdGVWYWx1ZXM6IGNvbmZpZygpLnZhcmlhYmxlcyB9KVxuXG5cdFx0YXdhaXQgbmV3IEZpbGVBZGFwdGVyKCkud3JpdGVUb0ZpbGUoeyBmaWxlQ29udGVudDogcmVuZGVyZWRDb250ZW50LCBmaWxlUGF0aCB9KVxuXHR9XG5cblx0YXN5bmMgcmVuZGVyRmlsZShwYXJhbXM6IHsgZmlsZVBhdGg6IHN0cmluZzsgdGVtcGxhdGVWYWx1ZXM6IFJlY29yZDxzdHJpbmcsIHVua25vd24+IH0pOiBQcm9taXNlPHN0cmluZz4ge1xuXHRcdGNvbnN0IHsgZmlsZVBhdGgsIHRlbXBsYXRlVmFsdWVzIH0gPSBwYXJhbXNcblxuXHRcdGNvbnN0IGZpbGVDb250ZW50ID0gYXdhaXQgbmV3IEZpbGVBZGFwdGVyKCkucmVhZEZpbGUoeyBmaWxlUGF0aCB9KVxuXG5cdFx0cmV0dXJuIHRlbXBsYXRpbmdBZGFwdGVyLnRyYW5zZm9ybSh7IHRlbXBsYXRlQ29udGVudDogZmlsZUNvbnRlbnQsIHZhcmlhYmxlczogdGVtcGxhdGVWYWx1ZXMgfSlcblx0fVxufVxuIl19