import path from 'path';
// import { fileService } from '#src/business/service/file-service'
import { FileAdapter } from '#src/lib/file-adapter';
import { config } from '#src/util/config';
import { stringUtil } from '#src/util/string-util';
export class TemplateFolderService {
    async cleanAll() {
        // TODO: should warn if tmp folder is not empty
        await new FileAdapter().removeFolder({ folderPath: config().tmpFolderPath });
        await this.makeTempFolderIfNotExist();
    }
    makeTempFolderIfNotExist() {
        return new FileAdapter().makeFolderIfNotExist({ folderPath: config().tmpFolderPath });
    }
    async promoteSubfolderToRoot(params) {
        const { rootFolderPath, subFolderLocation } = params;
        const tmpCopyPath = stringUtil.generateRandomTmpFolderName();
        const fileAdapter = new FileAdapter();
        await fileAdapter.copy({ destinationFilePath: tmpCopyPath, sourceFilePath: path.join(rootFolderPath, subFolderLocation) });
        await fileAdapter.removeFolder({ folderPath: rootFolderPath });
        await fileAdapter.copy({ destinationFilePath: rootFolderPath, sourceFilePath: tmpCopyPath });
        await fileAdapter.removeFolder({ folderPath: tmpCopyPath });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUtZm9sZGVyLXNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYnVzaW5lc3Mvc2VydmljZS90ZW1wbGF0ZS1mb2xkZXItc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLElBQUksTUFBTSxNQUFNLENBQUE7QUFFdkIsbUVBQW1FO0FBQ25FLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQTtBQUNuRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sa0JBQWtCLENBQUE7QUFDekMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHVCQUF1QixDQUFBO0FBRWxELE1BQU0sT0FBTyxxQkFBcUI7SUFDakMsS0FBSyxDQUFDLFFBQVE7UUFDYiwrQ0FBK0M7UUFDL0MsTUFBTSxJQUFJLFdBQVcsRUFBRSxDQUFDLFlBQVksQ0FBQyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFBO1FBQzVFLE1BQU0sSUFBSSxDQUFDLHdCQUF3QixFQUFFLENBQUE7SUFDdEMsQ0FBQztJQUVELHdCQUF3QjtRQUN2QixPQUFPLElBQUksV0FBVyxFQUFFLENBQUMsb0JBQW9CLENBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQTtJQUN0RixDQUFDO0lBRUQsS0FBSyxDQUFDLHNCQUFzQixDQUFDLE1BQTZEO1FBQ3pGLE1BQU0sRUFBRSxjQUFjLEVBQUUsaUJBQWlCLEVBQUUsR0FBRyxNQUFNLENBQUE7UUFFcEQsTUFBTSxXQUFXLEdBQUcsVUFBVSxDQUFDLDJCQUEyQixFQUFFLENBQUE7UUFFNUQsTUFBTSxXQUFXLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQTtRQUNyQyxNQUFNLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRSxtQkFBbUIsRUFBRSxXQUFXLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLGlCQUFpQixDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQzFILE1BQU0sV0FBVyxDQUFDLFlBQVksQ0FBQyxFQUFFLFVBQVUsRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFBO1FBQzlELE1BQU0sV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFLG1CQUFtQixFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLENBQUMsQ0FBQTtRQUM1RixNQUFNLFdBQVcsQ0FBQyxZQUFZLENBQUMsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLENBQUMsQ0FBQTtJQUM1RCxDQUFDO0NBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuXG4vLyBpbXBvcnQgeyBmaWxlU2VydmljZSB9IGZyb20gJyNzcmMvYnVzaW5lc3Mvc2VydmljZS9maWxlLXNlcnZpY2UnXG5pbXBvcnQgeyBGaWxlQWRhcHRlciB9IGZyb20gJyNzcmMvbGliL2ZpbGUtYWRhcHRlcidcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJyNzcmMvdXRpbC9jb25maWcnXG5pbXBvcnQgeyBzdHJpbmdVdGlsIH0gZnJvbSAnI3NyYy91dGlsL3N0cmluZy11dGlsJ1xuXG5leHBvcnQgY2xhc3MgVGVtcGxhdGVGb2xkZXJTZXJ2aWNlIHtcblx0YXN5bmMgY2xlYW5BbGwoKTogUHJvbWlzZTx2b2lkPiB7XG5cdFx0Ly8gVE9ETzogc2hvdWxkIHdhcm4gaWYgdG1wIGZvbGRlciBpcyBub3QgZW1wdHlcblx0XHRhd2FpdCBuZXcgRmlsZUFkYXB0ZXIoKS5yZW1vdmVGb2xkZXIoeyBmb2xkZXJQYXRoOiBjb25maWcoKS50bXBGb2xkZXJQYXRoIH0pXG5cdFx0YXdhaXQgdGhpcy5tYWtlVGVtcEZvbGRlcklmTm90RXhpc3QoKVxuXHR9XG5cblx0bWFrZVRlbXBGb2xkZXJJZk5vdEV4aXN0KCk6IFByb21pc2U8dm9pZD4ge1xuXHRcdHJldHVybiBuZXcgRmlsZUFkYXB0ZXIoKS5tYWtlRm9sZGVySWZOb3RFeGlzdCh7IGZvbGRlclBhdGg6IGNvbmZpZygpLnRtcEZvbGRlclBhdGggfSlcblx0fVxuXG5cdGFzeW5jIHByb21vdGVTdWJmb2xkZXJUb1Jvb3QocGFyYW1zOiB7IHN1YkZvbGRlckxvY2F0aW9uOiBzdHJpbmc7IHJvb3RGb2xkZXJQYXRoOiBzdHJpbmcgfSk6IFByb21pc2U8dm9pZD4ge1xuXHRcdGNvbnN0IHsgcm9vdEZvbGRlclBhdGgsIHN1YkZvbGRlckxvY2F0aW9uIH0gPSBwYXJhbXNcblxuXHRcdGNvbnN0IHRtcENvcHlQYXRoID0gc3RyaW5nVXRpbC5nZW5lcmF0ZVJhbmRvbVRtcEZvbGRlck5hbWUoKVxuXG5cdFx0Y29uc3QgZmlsZUFkYXB0ZXIgPSBuZXcgRmlsZUFkYXB0ZXIoKVxuXHRcdGF3YWl0IGZpbGVBZGFwdGVyLmNvcHkoeyBkZXN0aW5hdGlvbkZpbGVQYXRoOiB0bXBDb3B5UGF0aCwgc291cmNlRmlsZVBhdGg6IHBhdGguam9pbihyb290Rm9sZGVyUGF0aCwgc3ViRm9sZGVyTG9jYXRpb24pIH0pXG5cdFx0YXdhaXQgZmlsZUFkYXB0ZXIucmVtb3ZlRm9sZGVyKHsgZm9sZGVyUGF0aDogcm9vdEZvbGRlclBhdGggfSlcblx0XHRhd2FpdCBmaWxlQWRhcHRlci5jb3B5KHsgZGVzdGluYXRpb25GaWxlUGF0aDogcm9vdEZvbGRlclBhdGgsIHNvdXJjZUZpbGVQYXRoOiB0bXBDb3B5UGF0aCB9KVxuXHRcdGF3YWl0IGZpbGVBZGFwdGVyLnJlbW92ZUZvbGRlcih7IGZvbGRlclBhdGg6IHRtcENvcHlQYXRoIH0pXG5cdH1cbn1cbiJdfQ==