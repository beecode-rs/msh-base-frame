import mustache from 'mustache';
import { fileService } from '#src/service/file-service';
import { config } from '#src/util/config';
export const templateService = {
    render: (template, templateValues) => {
        return mustache.render(template, templateValues);
    },
    renderAndOverrideFile: async (filePath) => {
        const renderedContent = await templateService.renderFile(filePath, config().template);
        await fileService.writeToFile(filePath, renderedContent);
    },
    renderFile: async (filePath, templateValues) => {
        const fileContent = await fileService.readFile(filePath);
        return templateService.render(fileContent, templateValues);
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUtc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXJ2aWNlL3RlbXBsYXRlLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxRQUFRLE1BQU0sVUFBVSxDQUFBO0FBRS9CLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQTtBQUN2RCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sa0JBQWtCLENBQUE7QUFFekMsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHO0lBQzlCLE1BQU0sRUFBRSxDQUFDLFFBQWdCLEVBQUUsY0FBbUIsRUFBVSxFQUFFO1FBQ3pELE9BQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsY0FBYyxDQUFDLENBQUE7SUFDakQsQ0FBQztJQUNELHFCQUFxQixFQUFFLEtBQUssRUFBRSxRQUFnQixFQUFpQixFQUFFO1FBQ2hFLE1BQU0sZUFBZSxHQUFHLE1BQU0sZUFBZSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDckYsTUFBTSxXQUFXLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRSxlQUFlLENBQUMsQ0FBQTtJQUN6RCxDQUFDO0lBQ0QsVUFBVSxFQUFFLEtBQUssRUFBRSxRQUFnQixFQUFFLGNBQW1CLEVBQW1CLEVBQUU7UUFDNUUsTUFBTSxXQUFXLEdBQUcsTUFBTSxXQUFXLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBRXhELE9BQU8sZUFBZSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDLENBQUE7SUFDM0QsQ0FBQztDQUNELENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbXVzdGFjaGUgZnJvbSAnbXVzdGFjaGUnXG5cbmltcG9ydCB7IGZpbGVTZXJ2aWNlIH0gZnJvbSAnI3NyYy9zZXJ2aWNlL2ZpbGUtc2VydmljZSdcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJyNzcmMvdXRpbC9jb25maWcnXG5cbmV4cG9ydCBjb25zdCB0ZW1wbGF0ZVNlcnZpY2UgPSB7XG5cdHJlbmRlcjogKHRlbXBsYXRlOiBzdHJpbmcsIHRlbXBsYXRlVmFsdWVzOiBhbnkpOiBzdHJpbmcgPT4ge1xuXHRcdHJldHVybiBtdXN0YWNoZS5yZW5kZXIodGVtcGxhdGUsIHRlbXBsYXRlVmFsdWVzKVxuXHR9LFxuXHRyZW5kZXJBbmRPdmVycmlkZUZpbGU6IGFzeW5jIChmaWxlUGF0aDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiA9PiB7XG5cdFx0Y29uc3QgcmVuZGVyZWRDb250ZW50ID0gYXdhaXQgdGVtcGxhdGVTZXJ2aWNlLnJlbmRlckZpbGUoZmlsZVBhdGgsIGNvbmZpZygpLnRlbXBsYXRlKVxuXHRcdGF3YWl0IGZpbGVTZXJ2aWNlLndyaXRlVG9GaWxlKGZpbGVQYXRoLCByZW5kZXJlZENvbnRlbnQpXG5cdH0sXG5cdHJlbmRlckZpbGU6IGFzeW5jIChmaWxlUGF0aDogc3RyaW5nLCB0ZW1wbGF0ZVZhbHVlczogYW55KTogUHJvbWlzZTxzdHJpbmc+ID0+IHtcblx0XHRjb25zdCBmaWxlQ29udGVudCA9IGF3YWl0IGZpbGVTZXJ2aWNlLnJlYWRGaWxlKGZpbGVQYXRoKVxuXG5cdFx0cmV0dXJuIHRlbXBsYXRlU2VydmljZS5yZW5kZXIoZmlsZUNvbnRlbnQsIHRlbXBsYXRlVmFsdWVzKVxuXHR9LFxufVxuIl19