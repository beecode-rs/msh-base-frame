import mustache from 'mustache';
import { fileService } from '#src/service/file-service';
import { config } from '#src/util/config';
export const templateService = {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    render: (template, templateValues) => {
        return mustache.render(template, templateValues);
    },
    renderAndOverrideFile: async (filePath) => {
        const renderedContent = await templateService.renderFile(filePath, config().template);
        await fileService.writeToFile(filePath, renderedContent);
    },
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    renderFile: async (filePath, templateValues) => {
        const fileContent = await fileService.readFile(filePath);
        return templateService.render(fileContent, templateValues);
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUtc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXJ2aWNlL3RlbXBsYXRlLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxRQUFRLE1BQU0sVUFBVSxDQUFBO0FBRS9CLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQTtBQUN2RCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sa0JBQWtCLENBQUE7QUFFekMsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHO0lBQzlCLDhEQUE4RDtJQUM5RCxNQUFNLEVBQUUsQ0FBQyxRQUFnQixFQUFFLGNBQW1CLEVBQVUsRUFBRTtRQUN6RCxPQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLGNBQWMsQ0FBQyxDQUFBO0lBQ2pELENBQUM7SUFDRCxxQkFBcUIsRUFBRSxLQUFLLEVBQUUsUUFBZ0IsRUFBaUIsRUFBRTtRQUNoRSxNQUFNLGVBQWUsR0FBRyxNQUFNLGVBQWUsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQ3JGLE1BQU0sV0FBVyxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsZUFBZSxDQUFDLENBQUE7SUFDekQsQ0FBQztJQUNELDhEQUE4RDtJQUM5RCxVQUFVLEVBQUUsS0FBSyxFQUFFLFFBQWdCLEVBQUUsY0FBbUIsRUFBbUIsRUFBRTtRQUM1RSxNQUFNLFdBQVcsR0FBRyxNQUFNLFdBQVcsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUE7UUFFeEQsT0FBTyxlQUFlLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxjQUFjLENBQUMsQ0FBQTtJQUMzRCxDQUFDO0NBQ0QsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtdXN0YWNoZSBmcm9tICdtdXN0YWNoZSdcblxuaW1wb3J0IHsgZmlsZVNlcnZpY2UgfSBmcm9tICcjc3JjL3NlcnZpY2UvZmlsZS1zZXJ2aWNlJ1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnI3NyYy91dGlsL2NvbmZpZydcblxuZXhwb3J0IGNvbnN0IHRlbXBsYXRlU2VydmljZSA9IHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcblx0cmVuZGVyOiAodGVtcGxhdGU6IHN0cmluZywgdGVtcGxhdGVWYWx1ZXM6IGFueSk6IHN0cmluZyA9PiB7XG5cdFx0cmV0dXJuIG11c3RhY2hlLnJlbmRlcih0ZW1wbGF0ZSwgdGVtcGxhdGVWYWx1ZXMpXG5cdH0sXG5cdHJlbmRlckFuZE92ZXJyaWRlRmlsZTogYXN5bmMgKGZpbGVQYXRoOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+ID0+IHtcblx0XHRjb25zdCByZW5kZXJlZENvbnRlbnQgPSBhd2FpdCB0ZW1wbGF0ZVNlcnZpY2UucmVuZGVyRmlsZShmaWxlUGF0aCwgY29uZmlnKCkudGVtcGxhdGUpXG5cdFx0YXdhaXQgZmlsZVNlcnZpY2Uud3JpdGVUb0ZpbGUoZmlsZVBhdGgsIHJlbmRlcmVkQ29udGVudClcblx0fSxcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcblx0cmVuZGVyRmlsZTogYXN5bmMgKGZpbGVQYXRoOiBzdHJpbmcsIHRlbXBsYXRlVmFsdWVzOiBhbnkpOiBQcm9taXNlPHN0cmluZz4gPT4ge1xuXHRcdGNvbnN0IGZpbGVDb250ZW50ID0gYXdhaXQgZmlsZVNlcnZpY2UucmVhZEZpbGUoZmlsZVBhdGgpXG5cblx0XHRyZXR1cm4gdGVtcGxhdGVTZXJ2aWNlLnJlbmRlcihmaWxlQ29udGVudCwgdGVtcGxhdGVWYWx1ZXMpXG5cdH0sXG59XG4iXX0=