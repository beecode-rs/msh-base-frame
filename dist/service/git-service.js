import axios from 'axios';
import fs from 'fs';
import path from 'path';
import { config } from '../util/config.js';
export class GitService {
    _getAxiosHeader() {
        const { githubPersonAccessToken } = config();
        if (!githubPersonAccessToken) {
            return undefined;
        }
        return { Authorization: `token ${githubPersonAccessToken}` };
    }
    async downloadZipToTempFolder() {
        const { gitZipUrl, tempFolderPath, templateZipName } = config();
        const axiosHeader = this._getAxiosHeader();
        const { data: stream } = await axios.get(gitZipUrl, { headers: axiosHeader, responseType: 'stream' });
        stream.pipe(fs.createWriteStream(path.resolve(tempFolderPath, `./${templateZipName}`)));
        return new Promise((resolve, reject) => {
            stream.on('end', resolve);
            stream.on('error', reject);
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2l0LXNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2VydmljZS9naXQtc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUE7QUFDekIsT0FBTyxFQUFFLE1BQU0sSUFBSSxDQUFBO0FBQ25CLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQTtBQUV2QixPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sa0JBQWtCLENBQUE7QUFFekMsTUFBTSxPQUFPLFVBQVU7SUFDWixlQUFlO1FBQ3hCLE1BQU0sRUFBRSx1QkFBdUIsRUFBRSxHQUFHLE1BQU0sRUFBRSxDQUFBO1FBQzVDLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxDQUFDO1lBQzlCLE9BQU8sU0FBUyxDQUFBO1FBQ2pCLENBQUM7UUFFRCxPQUFPLEVBQUUsYUFBYSxFQUFFLFNBQVMsdUJBQXVCLEVBQUUsRUFBRSxDQUFBO0lBQzdELENBQUM7SUFFRCxLQUFLLENBQUMsdUJBQXVCO1FBQzVCLE1BQU0sRUFBRSxTQUFTLEVBQUUsY0FBYyxFQUFFLGVBQWUsRUFBRSxHQUFHLE1BQU0sRUFBRSxDQUFBO1FBQy9ELE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQTtRQUMxQyxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxHQUFHLE1BQU0sS0FBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFBO1FBQ3JHLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxFQUFFLEtBQUssZUFBZSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFFdkYsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUN0QyxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQTtZQUN6QixNQUFNLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQTtRQUMzQixDQUFDLENBQUMsQ0FBQTtJQUNILENBQUM7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcydcbmltcG9ydCBmcyBmcm9tICdmcydcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5cbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJyNzcmMvdXRpbC9jb25maWcnXG5cbmV4cG9ydCBjbGFzcyBHaXRTZXJ2aWNlIHtcblx0cHJvdGVjdGVkIF9nZXRBeGlvc0hlYWRlcigpOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+IHwgdW5kZWZpbmVkIHtcblx0XHRjb25zdCB7IGdpdGh1YlBlcnNvbkFjY2Vzc1Rva2VuIH0gPSBjb25maWcoKVxuXHRcdGlmICghZ2l0aHViUGVyc29uQWNjZXNzVG9rZW4pIHtcblx0XHRcdHJldHVybiB1bmRlZmluZWRcblx0XHR9XG5cblx0XHRyZXR1cm4geyBBdXRob3JpemF0aW9uOiBgdG9rZW4gJHtnaXRodWJQZXJzb25BY2Nlc3NUb2tlbn1gIH1cblx0fVxuXG5cdGFzeW5jIGRvd25sb2FkWmlwVG9UZW1wRm9sZGVyKCk6IFByb21pc2U8dm9pZD4ge1xuXHRcdGNvbnN0IHsgZ2l0WmlwVXJsLCB0ZW1wRm9sZGVyUGF0aCwgdGVtcGxhdGVaaXBOYW1lIH0gPSBjb25maWcoKVxuXHRcdGNvbnN0IGF4aW9zSGVhZGVyID0gdGhpcy5fZ2V0QXhpb3NIZWFkZXIoKVxuXHRcdGNvbnN0IHsgZGF0YTogc3RyZWFtIH0gPSBhd2FpdCBheGlvcy5nZXQoZ2l0WmlwVXJsLCB7IGhlYWRlcnM6IGF4aW9zSGVhZGVyLCByZXNwb25zZVR5cGU6ICdzdHJlYW0nIH0pXG5cdFx0c3RyZWFtLnBpcGUoZnMuY3JlYXRlV3JpdGVTdHJlYW0ocGF0aC5yZXNvbHZlKHRlbXBGb2xkZXJQYXRoLCBgLi8ke3RlbXBsYXRlWmlwTmFtZX1gKSkpXG5cblx0XHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXHRcdFx0c3RyZWFtLm9uKCdlbmQnLCByZXNvbHZlKVxuXHRcdFx0c3RyZWFtLm9uKCdlcnJvcicsIHJlamVjdClcblx0XHR9KVxuXHR9XG59XG4iXX0=