import axios from 'axios';
import fs from 'fs';
export const webAdapter = {
    async downloadFile(params) {
        const { fileUrl, fileDestinationPath, headers } = params;
        const response = await axios.get(fileUrl, { headers, responseType: 'stream' });
        const writer = fs.createWriteStream(fileDestinationPath);
        response.data.pipe(writer);
        await new Promise((resolve, reject) => {
            writer.on('finish', () => {
                resolve(undefined);
            });
            writer.on('error', reject);
        });
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2ViLWFkYXB0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbGliL3dlYi1hZGFwdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBeUQsTUFBTSxPQUFPLENBQUE7QUFDN0UsT0FBTyxFQUFFLE1BQU0sSUFBSSxDQUFBO0FBRW5CLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRztJQUN6QixLQUFLLENBQUMsWUFBWSxDQUFDLE1BSWxCO1FBQ0EsTUFBTSxFQUFFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxPQUFPLEVBQUUsR0FBRyxNQUFNLENBQUE7UUFFeEQsTUFBTSxRQUFRLEdBQUcsTUFBTSxLQUFLLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQTtRQUM5RSxNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsaUJBQWlCLENBQUMsbUJBQW1CLENBQUMsQ0FBQTtRQUN4RCxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUUxQixNQUFNLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ3JDLE1BQU0sQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRTtnQkFDeEIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFBO1lBQ25CLENBQUMsQ0FBQyxDQUFBO1lBQ0YsTUFBTSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUE7UUFDM0IsQ0FBQyxDQUFDLENBQUE7SUFDSCxDQUFDO0NBQ0QsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcywgeyB0eXBlIEF4aW9zSGVhZGVycywgdHlwZSBSYXdBeGlvc1JlcXVlc3RIZWFkZXJzIH0gZnJvbSAnYXhpb3MnXG5pbXBvcnQgZnMgZnJvbSAnZnMnXG5cbmV4cG9ydCBjb25zdCB3ZWJBZGFwdGVyID0ge1xuXHRhc3luYyBkb3dubG9hZEZpbGUocGFyYW1zOiB7XG5cdFx0ZmlsZVVybDogc3RyaW5nXG5cdFx0ZmlsZURlc3RpbmF0aW9uUGF0aDogc3RyaW5nXG5cdFx0aGVhZGVycz86IFJhd0F4aW9zUmVxdWVzdEhlYWRlcnMgfCBBeGlvc0hlYWRlcnNcblx0fSk6IFByb21pc2U8dm9pZD4ge1xuXHRcdGNvbnN0IHsgZmlsZVVybCwgZmlsZURlc3RpbmF0aW9uUGF0aCwgaGVhZGVycyB9ID0gcGFyYW1zXG5cblx0XHRjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChmaWxlVXJsLCB7IGhlYWRlcnMsIHJlc3BvbnNlVHlwZTogJ3N0cmVhbScgfSlcblx0XHRjb25zdCB3cml0ZXIgPSBmcy5jcmVhdGVXcml0ZVN0cmVhbShmaWxlRGVzdGluYXRpb25QYXRoKVxuXHRcdHJlc3BvbnNlLmRhdGEucGlwZSh3cml0ZXIpXG5cblx0XHRhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0XHR3cml0ZXIub24oJ2ZpbmlzaCcsICgpID0+IHtcblx0XHRcdFx0cmVzb2x2ZSh1bmRlZmluZWQpXG5cdFx0XHR9KVxuXHRcdFx0d3JpdGVyLm9uKCdlcnJvcicsIHJlamVjdClcblx0XHR9KVxuXHR9LFxufVxuIl19